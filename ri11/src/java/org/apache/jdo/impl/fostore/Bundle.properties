#
# Copyright 2005 The Apache Software Foundation.
# 
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at 
# 
#     http://www.apache.org/licenses/LICENSE-2.0
# 
# Unless required by applicable law or agreed to in writing, software 
# distributed under the License is distributed on an "AS IS" BASIS, 
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. 
# See the License for the specific language governing permissions and 
# limitations under the License.

# Resource bundle for the messages
#
# Source files are listed in alphabetical order: please keep it this way!
#
# Messages within a source file are not necessarily in alphabetical
# order; feel free to add to the end of the list.
#
# Note that since this is for the fostore package, id's don't have that as
# part of their name, in the interests of brevity, for example "transcriber"
# instead of "fostoretranscriber" and "nyi" instead of
#"fostorenotyetimplementedexception". 
#
# NOTE: Messages with a line before them '#NOI18N' are NOT to be localized!
# See http://www.netbeans.org/i18n, section 2.1.2, item 2.
#

#
# Generic
#
MSG_CannotGetSystemProperty=WARNING: a SecurityException was thrown when \
trying to read the system property ''{0}''. \
\n{1}\
\nYou must grant java.util.PropertyPermission("*","read") to the codeBase \
containing the JDO Reference Implementation (jdo-ri.jar).

#
# AbstractRequest
#
#NOI18N
ERR_RequestAlreadyBegun=Request already begun.
#NOI18N
ERR_NoRequestType=No request type for class {0}.
#NOI18N
ERR_RequestAlreadyEnded=Request already ended.

#
# AIDTranscriber
#
EXC_ObjectIdKeyFieldNull=Key field ''{1}'' of class ''{0}'' has a null value.
EXC_GetObjectByIdKeyFieldNull=Key fields in object id instances must not be null. {0}
EXC_MakePersistentKeyFieldNull=Key fields in persistent instances must not be null. {0}

#
# CLID
#
#NOI18N
ERR_OutOfProvisionalCLIDs=Ran out of provisional CLID's (max is {0}).
#NOI18N
ERR_InvalidRange=Id {0} is out of range {1} to {2}.
#NOI18N
ERR_Unknown=Class {0} does not have a known CLID.

#
# CommitHandler
#
#NOI18N
ERR_CommitFailed=Commit failed: {0}.

#
# DBExtent
#
#NOI18N
ERR_SecondInstance=Attempt to add a second instance with {0} to extent of {1}.

#
# DBInfo
#
#NOI18N
ERR_OutOfUIDs=Ran out of UID's (max is {0}).
#NOI18N
ERR_NoUIDsForCLID=No nextUIDs entry was allocated for {0}.

#
# DeleteHandler
#
EXC_DeleteVerifyFailed=Optimistic transaction cannot delete object with id {0} because it does not exist in the database.
#NOI18N
ERR_DatastoreFailed=Internal error: Datastore transaction attempt to delete object with id {0} when it does not exist in the database.

#
# DumpOption
#
EXC_BadValue=Dump option not recognized: {0}.

#
# Dumper
#
EXC_InstantiateClass=Could not load specified class {0}.
MSG_MissingDumpOption=Missing dumpOption parameter.
MSG_DumperException=Dumper caught exception: {0}
MSG_ExtentName=Extent of {0}:
MSG_ExtentCount=Extent of {0} has {1} objects.
MSG_Usage=\nFOStore dumper program usage:\n\t-DdumpOption=<option> -DclassNames=<classNames>\nParameter <option> can be one of the following alternatives: \n\tdbInfo: prints general information about the store.\n\tclassMetadata: prints the metadata for the classes <classNames>.\n \tclassInstances: prints all instances of the classes <classNames>.\n \tclassSubclasses: prints all information about all subclasses of the classes <classNames>.

#
# DumpHandler
#
MSG_MissingParameter=Parameter {0} is null.
MSG_DbClassNotFound=There is no information on class {0} in the database.
MSG_NoSubclasses=Class {0} does not have any subclasses.
MSG_Subclasses=Class {0} has these subclasses:
# NOI18N
ERR_NoSubHandler=No dump suboption named {0}.

#
# FetchHandler
# GetClassHandler
#
EXC_DoesNotExist=Object with identity {0} does not exist in the database.


#
# FieldFetcher
#
EXC_CannotLoadInstanceClass=Attempting to fetch an instance of class {0}, but cannot load that class.
EXC_CannotLoadFieldClass=Attempting to fetch an instance of class {0}, but cannot load class {1} which is required for one of its fields.
#NOI18N
ERR_ClassMismatch=While fetching an instance of class {0}, the type of a field in the database is {1} which does not match {2}, which is the type of that same field in the current Java virtual machine.
EXC_FsuidMismatch=Class structure mismatch for class {0}.  The persistente structure of the class in the database does not match that in the running Java virtual machine.

#
# FOStoreConnectionFactory
#
#NOI18N
ERR_Badformat=Integer found in invalid format: should not happen!
#NOI18N
ERR_CannotClose=Could not close database {0}.
#NOI18N
ERR_CloseConnectionpoolPut=InterruptedException while closing connection.
#NOI18N
ERR_DuplicatePool=Pool created but already exists.
#NOI18N
ERR_PoolPutFill=InterruptedException while filling connection pool.
#NOI18N
ERR_PoolGet=InterruptedException while getting connection.
EXC_AssertConfigurableFailure=Cannot configure connection factory after first connection is acquired.
EXC_CannotCreateConnection=Cannot create a connection to {0}
EXC_ConnectException=Connection refused by host {0} at port {1}.
EXC_UnknownHostException=Unknown host {0}.
EXC_CannotSpecifyStreamHandler=A SecurityException was thrown when trying to \
connect to the fostore database. You must grant \
java.net.NetPermission("specifyStreamHandler") to the codeBase \
containing the JDO Reference Implementation (jdo-ri.jar).

#
# FOStoreConnector
#
EXC_RollbackOnly=Database has rolled back due to internal error and cannot perform further operations.
#NOI18N
EXC_Busy=Reentrancy problem: Attempt to reenter a FOStoreConnector while it is being flushed.

#
# FOStoreDatabase
#
EXC_SecurityExceptionOnCreateBtreeStorage=A SecurityException was thrown when trying to \
create a fostore datastore. You must grant the following permissions to the \
codeBases containing the JDO Reference Implementation (jdo-ri.jar and \
btree.jar): \
java.io.FilePermission("<fostore database files>","read,write,delete") and \
java.util.PropertyPermission("*","read").
EXC_SecurityExceptionOnCloseBtreeStorage=A SecurityException was thrown when trying to \
close a fostore datastore. You must grant the following permissions to the \
codeBases containing the JDO Reference Implementation (jdo-ri.jar and \
btree.jar): \
java.io.FilePermission("<fostore database files>","read,write,delete") and \
java.util.PropertyPermission("*","read").
EXC_CannotReadFile=A SecurityException was thrown when trying to read file or \
directory ''{0}''.  You must grant java.io.FilePermission("{0}","read") to the \
codeBase containing the JDO Reference Implementation (jdo-ri.jar).
EXC_CannotDeleteFile=A SecurityException was thrown when trying to delete file \
or directory ''{0}''. You must grant java.io.FilePermission("{0}","delete") to \
the codeBase containing the JDO Reference Implementation (jdo-ri.jar).
#NOI18N
ERR_CLIDNotProv=given CLID is not provisional: {0}.
#NOI18N
ERR_OIDNotProv=given OID is not provisional: {0}.
#NOI18N
ERR_CloseDatabase=Database {0} not found in databaseMap.
#NOI18N
ERR_DirectoryDoesNotExist=Directory {0} does not exist.

#
# FOStoreInput
#
#NOI18N
ERR_InvalidSeekPos=Given seek position {0} is not in range 0 to {1}.

#
# FOStoreModel
#
#NOI18N
ERR_NoJDOClass=Cannot get JDO Model class information for class {0}; caught exception {1}.

#
# FOStoreOutput
#
#NOI18N
ERR_InvalidSeekPos=Given seek position {0} is not in range 0 to {1}.
#NOI18N
ERR_Closed=Output is closed.

#
# FOStorePMF
#
#NOI18N
ERR_OIDNotProv=given OID is not provisional: {0}.
#NOI18N
ERR_DuplicateProvOID=duplicate provisional OID: {0}.
EXC_CannotCreateJDOQLQueryFactory=Cannot create JDOQLQueryFactory of class ''{0}''.

#
# FOStoreSchemaUID
#
#NOI18N
ERR_Algorithm=Cannot create FOStoreSchemaUID.

#
# FOStoreServerConnectionImpl
#
#NOI18N
ERR_CloseDatabaseInterrupted=Interrupted closing database.
#NOI18N
ERR_GetDatabaseInterrupted=Interrupted getting database.
#NOI18N
ERR_GetDatabaseException=Exception getting database.

#
# FOStoreStoreManager
#
EXC_NotOID=Given object is not a valid OID.
EXC_UnboundOID=Cannot get datastore OID for given provisional OID.
EXC_VerifyFields=Field values in memory and database do not match.
ERR_Security=SecurityException thrown while getting JDOImplHelper: {0}.

#
# GetClassRequest
#
EXC_NoClassForCLID=No class found for {0}: {1}.

#
# FOStoreExtent
#
# NOI18N
EXC_RemoveNotSupported=JDO iterators do not support the remove method.

#
# InsertHandler
#
#NOI18N
ERR_NullRealCLID=Failed to get a datastore CLID for provisional {0}.
ERR_InsertException=Object with id {0} already exists in the database.

#
# Main
#
#NOI18N
ERR_HandleConnectionReadIOException=IOException reading from socket.
#NOI18N
ERR_HandleConnectionWriteIOException=IOException writing to socket.
#NOI18N
ERR_HandleConnectionWriteInterruptedException=InterruptedException writing to socket.

#
# Login Handler
#
EXC_LoginFailed=Could not login user {1} to database {0}.

#
# LoginRequest
#
#NOI18N
ERR_NoSuchAlgorithmException=Unable to login to database '{0}' as user '{1}'.  No such algorithm: {2}.
#NOI18N
ERR_UnsupportedEncodingException=Unable to login to database '{0}' as user '{1}'.  Unsupported encoding: {2}
EXC_CannotLogin=Unable to login to database.

#
# Main
#
MSG_MainUsage1=FOStore Main program usage:\n\t-Dport=<port number> listening port number for connection requests; default: {0}
MSG_MainUsage2=\t-Dbacklog=<backlog number> listening backlog number for connection requests; default: {0}
MSG_MainUsage3=\t-Droot=<file path> root path name for databases; default: <user.dir>\n\t-Dtimeout=<timeout> seconds before server process shuts down due to lack of activity; default: {0}\n\nConnect using URL:\n\tfostore://<server-name>[:<port-number>]/<database-name>

#
# Message
#
#NOI18N
ERR_DuplicateRequestID=Message.putRequest got duplicate RequestId {0}.
#NOI18N
ERR_SendToStore=Message.sendToStore got IOException.
#NOI18N
ERR_ReceiveFromStore=Message.receiveFromStore got IOException.
#NOI18N
ERR_InitOutput=Message.initOutput got IOException.
#NOI18N
ERR_FinishOutput=Message.finishOutput got IOException.
#NOI18N
ERR_CloseConnection=Message.closeConnection got IOException.
EXC_MessageVersionMismatch=Version number mismatch while reading message from client: expected {0}, but received {1}.


#
# ObjectTranscriber
#
#NOI18N
ERR_NoTranscriberForClass=No transcriber for class {0}.
#NOI18N
ERR_ShouldNotHappen=Should not happen: {0}.
#NOI18N
ERR_NullComponentType=Null component type.
EXC_ClassNotTranscribable=Cannot transcribe instances of class {0}.
EXC_UnsupportedArrayType=Unsupported array type {0}.
EXC_CannotLoadClass=Cannot load class named {0}.

#
# OID
#
#NOI18N
ERR_InvalidAttemptToCreateOID=Invalid attempt to create provisional OID with id of {0}.
EXC_CannotCompareNonOID=Invalid attempt to compare an OID with a non-OID

#
# Reply
#
#NOI18N
ERR_Closed=Reply is closed.
EXC_ReplyVersionMismatch=Version number mismatch while reading reply information from database server: expected {0}, but received {1}.

#
# ReplyHandler
#
EXC_Exceptions=Exceptions occurred during processing.
EXC_Optimistic=Optimistic verification failed.
#NOI18N
ERR_CannotGetRequest=Cannot get request object corresponding to {0}.
# NOI18N
ERR_FatalReply=Fatal error in database: {0}.


#
# RequestHandler
#
#NOI18N
ERR_CannotCreateHandler=Could not create request handler for {0}.
#NOI18N
ERR_SendToClient=Could not send reply to client: {0}.
EXC_Unknown=Unknown cause.

#
# RequestId
#
#NOI18N
ERR_Overflow=Ran out of request id's (max is {0}).

#
# RollbackHandler
#
#NOI18N
ERR_RollbackFailed=Rollback failed: {0}.

#
# Status
#
#NOI18N
ERR_OutOfRange=Status value {0} is out of range {1} to {2}.
MSG_Unknown=unknown
MSG_Ok=ok
MSG_Warn=warn
MSG_Error=error
MSG_Fatal=fatal
MSG_Invalid=invalid
MSG_Rollback=rollback
MSG_Login=login
MSG_Optimistic=optimistic

#
# UpdateHandler
#
EXC_OptimisticDoesNotExist=Optimistic transaction cannot verify object with id {0} because it does not exist in the database.
EXC_OptimisticVerifyFailed=Optimistic transaction failed when verifying object id {0}.

#
# UpdateRequest
#
#NOI18N
ERR_OidIsProvisional=Object id {0} is provisional and cannot be updated without being inserted first.

#
# VerifyHandler
#
#NOI18N
ERR_VerifyException=Exception while verifying {0}; nested exception follows.
