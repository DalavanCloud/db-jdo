#
# Copyright 2005 The Apache Software Foundation.
# 
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at 
# 
#     http://www.apache.org/licenses/LICENSE-2.0
# 
# Unless required by applicable law or agreed to in writing, software 
# distributed under the License is distributed on an "AS IS" BASIS, 
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. 
# See the License for the specific language governing permissions and 
# limitations under the License.

#
# Generic messages
#

# {0} - location (class.method)
#NOI18N
ERR_InvalidNullFieldInstance={0}: specified Field instance is null.


# {0} - class name
# {1} - detailed message of the cause
EXC_ClassLoadingError=Error during loading of class ''{0}'': {1}.

#
# ReflectionJavaType
#

# {0} - error location (class.method)
#NOI18N
ERR_InvalidNullClassInstance={0}: specified Class instance is null.

#
# ReflectionJavaField
#
# {0} - class name
EXC_CannotGetDeclaredField=A SecurityException was thrown when trying to \
get a declared field of class ''{0}''.  You must grant \
java.lang.RuntimePermission("accessDeclaredMembers") to the codeBase \
containing the JDO Reference Implementation (jdori.jar).

#
# AbstractJavaModelFactory
#

# {0} - class name
# {1} - method name
EXC_MethodNotSupported=Class {0} does not support method {1}.

EXC_CannotCreateJavaModel=Problems during JavaModel creation.

#
# ReflectionJavaField
#
#NOI18N
ERR_MissingFieldInstance={0}: cannot find reflection field instance for field {1}.


#
# RuntimeJavaModelFactory
#

EXC_CannotGetJDOImplHelper=A SecurityException was thrown when trying to get \
the singleton JDOImplHelper instance. In order to get runtime metadata, you \
must grant javax.jdo.spi.JDOPermission("getMetadata") to the codeBases \
containing the JDO Reference Implementation (jdo.jar and jdori.jar).

EXC_CannotGetRuntimeJavaModelFactory=A SecurityException was thrown when trying \
to get the singleton RuntimeJavaModelFactory instance. In order to get runtime \
metadata, you must grant javax.jdo.spi.JDOPermission("getMetadata") to the \
codeBases containing the JDO Reference Implementation (jdo.jar and jdori.jar).

# {0} - class instance
EXC_CannotGetClassLoader=A SecurityException was thrown when trying to get the \
class loader of class instance ''{0}''. In order to get runtime metadata, you \
must grant ReflectPermission("getClassLoader") to the codeBase containing the \
JDO Reference Implementation (jdori.jar).

# {0} - key instance
EXC_InvalidJavaModelKey=Invalid key for runtime JavaModel lookup: \
expected ''java.lang.ClassLoader'' instance, found ''{0}'' instance.

# {0} - type description instance
EXC_InvalidTypeDesc=Invalid type description for runtime JavaType lookup: \
expected ''java.lang.Class'' instance, found ''{0}'' instance.

# {0} - JavaType instance
EXC_InvalidJavaType=Invalid JavaType instance for getJavaClass method: \
expected ''org.apache.jdo.impl.model.java.ReflectionJavaType'' instance, \
found ''{0}'' instance.

#
# RuntimeJavaType
#

# {0} - error location (class.method)
# {1} - implementation method name
# {2} - field name
#NOI18N
ERR_MultipleJavaField={0}: multiple JavaField ''{1}'' for class '{2}''.
